name: CI/CD Workflow
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
    push:
        branches:
            - main
        paths:
            - src/**
            - cypress/**
            - .github/workflows/**

jobs:
    basic-checks:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Detect package manager
          id: detect-package-manager
          run: |
            if [ -f "${{ github.workspace }}/yarn.lock" ]; then
              echo "manager=yarn" >> $GITHUB_OUTPUT
              echo "command=install" >> $GITHUB_OUTPUT
              echo "runner=yarn" >> $GITHUB_OUTPUT
              exit 0
            elif [ -f "${{ github.workspace }}/package.json" ]; then
              echo "manager=npm" >> $GITHUB_OUTPUT
              echo "command=ci" >> $GITHUB_OUTPUT
              echo "runner=npx --no-install" >> $GITHUB_OUTPUT
              exit 0
            else
              echo "Unable to determine package manager" >&2
              exit 1
            fi
        - name: Setup Node
          uses: actions/setup-node@v3
          with:
            node-version: "20"
            cache: ${{ steps.detect-package-manager.outputs.manager }}
        - name: Restore cache
          uses: actions/cache@v3
          with:
            path: |
              .next/cache
            key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
            restore-keys: |
              ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
        - name: Install dependencies
          run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
        - name: Run ESlint
          run: npm run lint
        - name: Build with Next.js
          run: npm run build

    cypress-run:
      runs-on: ubuntu-latest
      needs: [basic-checks]
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Cypress run E2E
          uses: cypress-io/github-action@v6
          with:
            browser: chrome
            build: npm run build
            start: npm run dev
            wait-on: "http://localhost:3000"
        - name: Cypress run Component
          uses: cypress-io/github-action@v6
          with:
            browser: chrome
            build: npm run build
            start: npm run dev
            wait-on: "http://localhost:3000"
            component: true

    deploy-vercel:
      runs-on: ubuntu-latest
      needs: [basic-checks, cypress-run]
      steps:
        - uses: actions/checkout@v2
        - name: Install Vercel CLI
          run: npm install --global vercel@latest
        - name: Pull Vercel Environment Information
          run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        - name: Build Project Artifacts
          run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        - name: Deploy Project Artifacts to Vercel
          run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}